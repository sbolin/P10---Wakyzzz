{\rtf1\ansi\ansicpg1252\cocoartf2578
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 SFMono-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue255;\red127\green127\blue127;\red0\green0\blue0;
}
{\*\expandedcolortbl;;\cssrgb\c1680\c19835\c100000;\cssrgb\c57046\c57047\c57046;\cssrgb\c0\c0\c0;
}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx405\tx833\li828\fi-829\pardirnatural\partightenfactor0

\f0\fs22 \cf0 Tracked Issues:\
General:\
	1.	Group files according to function (Model, View, Controller, Storyboard, etc)\
	2.	Add TODO and Tracked issue files (files will be added to the repo)\
\
Alarm.swift:\
	1.	\cf2 var time = 8 * 3600 \cf3 // ( was 360 )\cf0 \
	2.	\cf2 let components = calendar.dateComponents([.hour, .minute, .month, .year, .day, .second, .weekOfMonth], from: date as Date)  \cf3 // ( var changed to let )\
\cf0 	3.	Added \cf2 var snoozed = false \cf3 // ( new parameter )\cf0 \
	4.	Changed \cf2 let h = ... \cf0 to\cf2  let hour = \cf3 // ( clarify parameter neame )\cf0 \
	5.	Changed \cf2 let m = ... \cf0 to\cf2  let minute =  \cf3 // ( clarify parameter name)\cf0 \
	6.	Changed \cf2 var components = ... \cf0 to\cf2  var alarmTimeComponents =  \cf3 // ( clarify parameter name)\cf0 \
	7.	Changed \cf2 var alarmDate = ... \cf0 to\cf2  var alarmTimeAndDate =  \cf3 // ( clarify parameter name)\cf0 \
	8.	Changed \cf2 var caption = ... \cf0 to\cf2  var repeatingDayString =  \cf3 // ( clarify parameter name)\cf0 \
	9.	Changed \cf2 func setTime(date:) ... \cf0 to\cf2  func setAlarmTime(date:) =  \cf3 // ( clarify function name)\cf0 \
	10.	Changed \cf2 repeatingDayString \cf0 to\cf2  localAlarmTimeString  \cf3 // ( clarify parameter name)\cf0 \
	11.	Changed \cf2 repeating \cf0 to\cf2  repeatingDayString  \cf3 // ( clarify parameter name)\
\cf0 	12.	Preparing to switch Alarm.swift model over to AlarmEntity, the CoreData model. \cf3 \
\cf0 \
\cf3 \
\cf4 	\
AlarmsViewController.swift:\
	1. change \cf2 editActionsForRowAt\cf4  to \cf2 trailingSwipeActionsConfigurationForRowAt \cf3 // ( editActionsForRowAt is deprecated, change to trailingSwipeActions... )\
\cf4 	2.	\cf2 alarms.remove(at: alarms.count)\cf4  incorrect, changed to \cf2 alarms.remove(at: indexPath.row)\cf3   // ( alarms.count is total number of alarms, need to delete alarm at indexpath.row )\
\cf4 	3. refactor code into extensions, with  \cf3 // ( editActionsForRowAt is deprecated, change to trailingSwipeActions... )\
\cf0 	5.	\cf2 func populateAlarms() \cf0 called only if there are no alarms (and this will be changed to populating the alarms from Core Data later)\cf2   \cf3 // ( clarify function calls )\
	\cf0 6.	refactor \cf2 func populateAlarms() \cf0 from viewDidLoad directly, rather than called in func config()\cf2   \cf3 // ( clarify function call site )\
\cf0 	7.	Changed \cf2 func config() ... \cf0 to\cf2  func configureTableView()  \cf3 // ( clarify function name )\cf0 \
	8.	updated parameter names based on changes 10-11 in Alarm.swift\cf2   \cf3 // ( clarify parameter name )\
\cf0 	9.	Preparing to switch Alarm.swift model over to AlarmEntity, the CoreData model. \cf3 \
\cf0 \
\
\cf4 \
AlarmViewController:\
	1. add \cf2 delegate?.alarmViewControllerCancel() \cf3 // ( delegate method to cancel alarm was not called )\
\cf0 	2.	Changed name to SetAlarmViewController to better reflect what it does and to better distinguish it from AlarmsViewController\
\
\cf4 SetAlarmViewController:\cf3 \
\cf0 	1.	Changed name from AlarmViewController (see above)\
	2. Changed datePicker to show 8am when SetAlarmViewController is instantiated.\
	3.	Preparing to switch Alarm.swift model over to AlarmEntity, the CoreData model. \cf3 \
\cf0 \
\cf4 CoreDataStack.swift:\
	1. New file, set up Core Data Stack, include CRUD functionality\
\
\
Evil.m4a added (evil sound played until turned off by action)\
\
Added NotificationController, fixed constraints in tableview cell\
Fixed constraints in Alarm Scene data picker\
Added CoreData model, ManagedObject classes, and CoreDataStack\
Added computed properties to CoreData model:\
	1. localAlarmTimeString, used to format the time shown in the table view cell\
	2. repeatingDayString, used to change bool Array of repeating days to Array with repeating day names. Shown in table view cell\
	3. Added static let daysOfWeek, used for 2 above, and also in SetAlarmViewController (to set up repeating days)\
\
Action.swift:\
Changed to enum, holding the random acts of kindness actions items\
\
NotificationController:\
Adding utility methods to create/modify/destroy notifications}